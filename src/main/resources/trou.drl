//created on: 8 mai 2014
package expert.detection

import expert.model.IntervalleMesure
import java.util.ArrayList;
import expert.model.Mesure;
import java.lang.Boolean;
import java.util.HashSet;

global java.util.HashSet trouList; 

rule "Trou rules"

    when
        //conditions
        IntervalleMesure( $table : tabMesure)
        m : Mesure($time :  date.getSeconds()) from $table
       	m1 : Mesure(  date.getSeconds() == $time +1 && z - m.z >8) from $table
       	//m1 : Mesure() from $table
       	m2 : Mesure( ( date.getSeconds() == $time +2 || 
       					date.getSeconds() == $time +3) && z - m1.z < 5) from $table
       	//m2 : Mesure( date.getSeconds() == $time+2) from $table
       	//m2 : Mesure() from $table
       	//m3 : Mesure() from $table
       	//if(  $table.indexOf(m1) - $table.indexOf(m) == 1 && $table.indexOf(m2) - $table.indexOf(m1)==1
       		//&& $table.indexOf(m3) - $table.indexOf(m2) == 1 ) do[testrules]
       		
       	//if($table.indexOf(m1) - $table.indexOf(m) == 1)do[test]
       	
    then
        //actions
        //System.out.println(m.getDate().getMinutes()*60 +m.getDate().getSeconds());
        //System.out.println(m1.getDate().getMinutes()*60 +m1.getDate().getSeconds());
        //System.out.println(m2.getDate().getMinutes()*60 +m2.getDate().getSeconds());
        trouList.add(m1);
        //System.out.println($table.indexOf(m1) - $table.indexOf(m));
    then[testrules]
    	//System.out.println(m.getZ()+" "+m1.getZ()+" "+m2.getZ()+" "+m3.getZ());
    	//if (  (m1.getZ() - m.getZ() > 8) && ( (m2.getZ() - m1.getZ() < 5) || (m3.getZ()-m2.getZ() < 5) ) )
    	//	trouList.add(m1);
   	then[test]
   		//System.out.println("2afichi 7aja ya kazi");
end

